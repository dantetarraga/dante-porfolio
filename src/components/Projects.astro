---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import React from "./icons/React.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import Router from "./icons/Router.astro"
import Express from "./icons/Express.astro"
import MongoDB from "./icons/MongoDB.astro"
import Redux from "./icons/Redux.astro"
import MaterialUI from "./icons/MaterialUI.astro"
import Firebase from "./icons/Firebase.astro"
import Graph from "./icons/Graph.astro"
import Cloudinary from "./icons/Cloudinary.astro"
import Python from "./icons/Python.astro"
import TypeScript from "./icons/TypeScript.astro"
import PostgreSQL from "./icons/PostgreSQL.astro"

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  REACT: {
    name: "React",
    class: "bg-blue-950 text-white",
    icon: React,
  },
  ZUSTAND: {
    name: "Zustand",
    class: "bg-stone-900 text-white",
    icon: null,
  },
  REACT_ROUTER_DOM: {
    name: "React Router Dom",
    class: "bg-blue-950 text-white",
    icon: Router,
  },
  EXPRESS: {
    name: "Express",
    class: "bg-green-700 text-white",
    icon: Express,
  },
  MONGO_DB: {
    name: "MongoDB",
    class: "bg-green-700 text-white",
    icon: MongoDB,
  },
  REDUX: {
    name: "Redux",
    class: "bg-purple-700 text-white",
    icon: Redux,
  },
  MATERRIAL_UI: {
    name: "Material UI",
    class: "bg-blue-950 text-white",
    icon: MaterialUI,
  },
  FIREBASE: {
    name: "Firebase",
    class: "bg-yellow-700 text-white",
    icon: Firebase,
  },
  CLOUDINARY: {
    name: "Cloudinary",
    class: "bg-purple-950 text-white",
    icon: Cloudinary,
  },
  GRAPH: {
    name: "GraphQL",
    class: "bg-purple-950 text-white",
    icon: Graph,
  },
  PYTHON: {
    name: "Python",
    class: "bg-blue-950 text-white",
    icon: Python,
  },
  TYPESCRIPT: {
    name: "TypeScript",
    class: "bg-blue-950 text-white",
    icon: TypeScript,
  },
  POSTGRESQL: {
    name: "PostgreSQL",
    class: "bg-sky-800 text-white",
    icon: PostgreSQL,
  },
}
const PROJECTS = [
  {
    title: "Journalling App",
    description:
      "Diario personal con React, Redux y Firebase. Autenticación de usuarios, almacenamiento y carga de imágenes con Cloudinary. Gestión de estado con Redux, rutas dinámicas con React Router DOM y diseño responsive usando Material-UI.",
    link: "https://calendar-mern-backend-three.vercel.app/",
    github: "https://github.com/dantetarraga/journal-app",
    image: "https://github.com/dantetarraga/journal-app",
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.EXPRESS, TAGS.REDUX, TAGS.FIREBASE, TAGS.CLOUDINARY, , TAGS.MATERRIAL_UI],
  },
  {
    title: "CalendarApp",
    description:
      "Aplicación web para la gestión de eventos y citas, similar a Google Calenda. Permite organizar citas creando, editando y eliminando eventos fácilmente.",
    link: "https://journal-app-three-woad.vercel.app/auth/login",
    github: "https://github.com/dantetarraga/calendar-MERN-backend",
    image: "/projects/svgl.webp",
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.EXPRESS, TAGS.REDUX, TAGS.MONGO_DB],
  },
  {
    title: "Eccomerce",
    description: "Desarrollo de e-commerce con React, API de Fake Store, React Router Dom y manejo de estados usando Zustand. Interfaz responsive con Tailwind CSS, gestión de carrito y navegación entre páginas.",
    link: "https://ecommerce-react-tailwind-seven.vercel.app/",
    github: "https://github.com/dantetarraga/ecommerce-react-tailwind",
    image: "/projects/adventjs.webp",
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.REACT_ROUTER_DOM, TAGS.ZUSTAND],
  },
  {
    title: "Countries App",
    description:
      "Plataforma informativa de países con React y GraphQL. Integración de API de Unsplash para imágenes y diseño responsive con Tailwind CSS. Consultas eficientes de datos de países mediante GraphQL, interfaz intuitiva y navegación fluida.",
    link: "https://country-app-two-theta.vercel.app/",
    github: "https://github.com/dantetarraga/country-app",
    image: "https://github.com/dantetarraga/country-app",
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.GRAPH],
  },
  {
    title: "Reconocimiento de señas - Deep Learning",
    description:
      "Desarrollo de un modelo de reconocimiento de señas mediante técnicas de Deep Learning, utilizando redes neuronales convolucionales para el procesamiento eficiente de imágenes para alcanzar una alta precisión en la interpretación del lenguaje de señas.",
    github: "https://github.com/dantetarraga/sign-recognition-deep-learning",
    image: "https://github.com/dantetarraga/country-app",
    tags: [TAGS.PYTHON],
  },
  {
    title: "Crud Products",
    description:
      "Desarrollo de CRUD de productos utilizando el stack PERN. Implementación de operaciones completas (Crear, Leer, Actualizar, Eliminar).",
    github: "https://github.com/dantetarraga/pern-crud-products.git",
    image: "https://github.com/dantetarraga/country-app",
    tags: [TAGS.TYPESCRIPT, TAGS.POSTGRESQL, TAGS.REACT, TAGS.EXPRESS],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row flex-wrap gap-y-2 mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag!.class} py-1 px-2 `}
              >
                {tag?.icon && <tag.icon class="size-4" />}
                {tag!.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



